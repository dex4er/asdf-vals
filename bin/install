#!/usr/bin/env bash

set -euo pipefail
shopt -s inherit_errexit 2>/dev/null || true

[[ -z ${ASDF_INSTALL_TYPE+x} ]] && echo "ASDF_INSTALL_TYPE is required" && exit 1
[[ -z ${ASDF_INSTALL_VERSION+x} ]] && echo "ASDF_INSTALL_VERSION is required" && exit 1
[[ -z ${ASDF_INSTALL_PATH+x} ]] && echo "ASDF_INSTALL_PATH is required" && exit 1

repo="helmfile/vals"

function gh_curl() {
	if [[ -n ${GITHUB_API_TOKEN:-} ]]; then
		curl -fsSL -H "Authorization: token ${GITHUB_API_TOKEN}" "$@"
	else
		curl -fsSL "$@"
	fi
}

function install() {
	local install_type=$1
	[[ ${install_type} != "version" ]] && echo "install type, ${install_type}, is not supported" && exit 1

	local version=$2
	local install_path=$3

	local prefix="v"

	local tmp_download_dir

	if [[ -z ${TMPDIR:-} ]]; then
		tmp_download_dir=$(mktemp -d)
	else
		tmp_download_dir=${TMPDIR%/}
	fi

	local bin_install_path="${install_path}/bin"

	local platform
	platform=$(uname | tr '[:upper:]' '[:lower:]')

	local arch
	arch=$(arch 2>/dev/null)
	if [[ -z ${arch} ]]; then
		arch=$(uname -m)
	fi
	case "${arch}" in
	i?86)
		case "${platform}" in
		darwin) arch=amd64 ;;
		*) arch=386 ;;
		esac
		;;
	x86_64) arch=amd64 ;;
	aarch64) arch=arm64 ;;
	esac

	local download_url
	local checksum_url

	local download_filename="vals_${version}_${platform}_${arch}.tar.gz"
	local checksum_filename="vals_${version}_checksums.txt"

	if [[ -n ${GITHUB_API_TOKEN:-} ]]; then
		local asset_url
		asset_url="https://api.github.com/repos/${repo}/releases/tags/${prefix}${version}"
		download_url=$(gh_curl -H "Accept: application/vnd.github.v3.raw" "${asset_url}" | jq -r ".assets | map(select(.name == \"${download_filename}\"))[0].url")
		if [[ ${download_url} == null ]]; then
			echo "Package ${download_filename} not found in a release ${prefix}${version}."
			exit 1
		fi
		checksum_url=$(gh_curl -H "Accept: application/vnd.github.v3.raw" "${asset_url}" | jq -r ".assets | map(select(.name == \"${checksum_filename}\"))[0].url")
		if [[ ${checksum_url} == null ]]; then
			echo "Checksum ${checksum_filename} not found in a release ${prefix}${version}."
			exit 1
		fi
	else
		download_url="https://github.com/${repo}/releases/download/${prefix}${version}/${download_filename}"
		checksum_url="https://github.com/${repo}/releases/download/${prefix}${version}/${checksum_filename}"
	fi

	echo "Downloading from ${download_url}"

	mkdir -p "${tmp_download_dir}"

	pushd "${tmp_download_dir}" >/dev/null

	gh_curl -H "Accept: application/octet-stream" -o "${download_filename}" "${download_url}"

	if command -v shasum >/dev/null; then
		gh_curl -H "Accept: application/octet-stream" "${checksum_url}" | awk "\$2 == \"${download_filename}\" {print}" | shasum -a 256 -c
	elif command -v sha256sum >/dev/null; then
		gh_curl -H "Accept: application/octet-stream" "${checksum_url}" | awk "\$2 == \"${download_filename}\" {print}" | sha256sum -c
	fi

	mkdir -p "${bin_install_path}"

	tar zxf "${download_filename}"
	cp "vals" "${bin_install_path}/vals"
	chmod +x "${bin_install_path}/vals"

	popd >/dev/null
}

install "${ASDF_INSTALL_TYPE}" "${ASDF_INSTALL_VERSION}" "${ASDF_INSTALL_PATH}"
